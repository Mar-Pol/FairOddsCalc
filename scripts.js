function isMobileDevice(){return/Mobi|Android/i.test(navigator.userAgent)||window.innerWidth<768}
document.addEventListener('DOMContentLoaded',function(){const modeToggle=document.getElementById('modeToggle');const modeIcon=document.getElementById('modeIcon');const modeText=document.getElementById('modeText');const tipCount=document.getElementById('tipCount');const customCountContainer=document.getElementById('customCountContainer');const customCountInput=document.getElementById('customCountInput');const applyCustomCount=document.getElementById('applyCustomCount');const tipInputs=document.getElementById('tipInputs');const calculateButton=document.getElementById('calculateButton');const resultsCard=document.getElementById('resultsCard');const results=document.getElementById('results');const resetButton=document.getElementById('resetButton');const langSelect=document.getElementById('langSelect');const translations={'sk':{'modeLight':'Svetlý Režim','modeDark':'Tmavý Režim','tipCountLabel':'Počet tipov:','customTipCount':'vlastný','customTipCountPlaceholder':'Zadaj vlastný počet tipov','applyButton':'Použiť','calculateButton':'Vypočítať férové kurzy','resultsTitle':'Výsledky','resetButton':'Spustiť znova','nameButton':'Pomenovať','tipPlaceholder':'Zadaj kurz pre Tip','namePlaceholder':'Zadaj pomenovanie pre Tip','invalidTipCount':'Počet tipov nemôže byť nižší ako 2 a vačší ako 50.','invalidOdd':'Neplatný kurz pre Tip','resultOriginalOdd':'Pôvodný kurz:','resultFairOdd':'Férový kurz:','resultProbability':'Pravdepodobnosť:','resultUndervalued':'Stávková kancelária PODHODNOCUJE túto stávku.','resultOvervalued':'Stávková kancelária NADHODNOCUJE túto stávku.','tooltipUndervalued':'Pravdepodobnosť výhry je\nnižšia, než kurz naznačuje.','tooltipOvervalued':'Pravdepodobnosť výhry je\nvyššia, než kurz naznačuje.','disclaimer':'<strong>Disclaimer:</strong> Táto stránka slúži iba na informačné účely a poskytuje výpočty férových kurzov bez akejkoľvek záruky presnosti. Nie je to finančné, investičné ani stávkové poradenstvo. Autor nenesie zodpovednosť za žiadne rozhodnutia urobené na základe uvedených výpočtov. <strong>Obsah je určený len pre osoby staršie ako 18 rokov.</strong> Hazardné hry môžu viesť k finančným stratám a vzniku závislosti. Použitím tejto stránky potvrdzujete, že rozumiete týmto podmienkam.'},'en':{'modeLight':'Light Mode','modeDark':'Dark Mode','tipCountLabel':'Number of bets:','customTipCount':'custom','customTipCountPlaceholder':'Enter custom number of bets','applyButton':'Apply','calculateButton':'Calculate fair odds','resultsTitle':'Results','resetButton':'Start again','nameButton':'Name','tipPlaceholder':'Enter odds for Bet','namePlaceholder':'Enter name for Bet','invalidTipCount':'Number of bets cannot be less than 2 and more than 50.','invalidOdd':'Invalid odds for Bet','resultOriginalOdd':'Original odds:','resultFairOdd':'Fair odds:','resultProbability':'Probability:','resultUndervalued':'The bookmaker UNDERVALUES this bet.','resultOvervalued':'The bookmaker OVERVALUES this bet.','tooltipUndervalued':'The probability of winning is\nlower than the odds suggest.','tooltipOvervalued':'The probability of winning is\nhigher than the odds suggest.','disclaimer':'<strong>Disclaimer:</strong> This page is for informational purposes only and provides fair odds calculations without any guarantee of accuracy. It is not financial, investment, or betting advice. The author bears no responsibility for any decisions made based on the calculations provided. <strong>Content is intended for persons over 18 years of age only.</strong> Gambling can lead to financial losses and addiction. By using this page, you confirm that you understand these terms.'}};let lastTipData=[];let lastFairOddsData=null;let currentLang=loadLanguagePreference();langSelect.value=currentLang;document.documentElement.lang=currentLang;function saveLanguagePreference(lang){localStorage.setItem('FairOddsCalcLanguage',lang)}
function loadLanguagePreference(){return localStorage.getItem('FairOddsCalcLanguage')||'en'}
function saveCurrentStateBeforeRefresh(){let count;let isCustom=!1;const resultsVisible=!resultsCard.classList.contains('hidden');if(tipCount.value==='custom_tipCount'){count=parseInt(customCountInput.value);isCustom=!0;if(isNaN(count)||count<2||count>50){return}}else{count=parseInt(tipCount.value)}
const inputsData=[];for(let i=1;i<=count;i++){const oddInput=document.getElementById(`tipOdd${i}`);const nameToggle=document.getElementById(`nameToggle${i}`);const oddValue=oddInput?oddInput.value.trim():'';let nameValue='';if(nameToggle&&nameToggle.dataset.hasCustomName==='true'){nameValue=nameToggle.dataset.customName}
inputsData.push({odd:oddValue,name:nameValue})}
const state={count:count,isCustom:isCustom,inputs:inputsData,calculated:resultsVisible};sessionStorage.setItem('FairOddsCalcState',JSON.stringify(state))}
function loadAndApplyStateAfterRefresh(){const savedStateJSON=sessionStorage.getItem('FairOddsCalcState');if(!savedStateJSON){return!1}
try{const savedState=JSON.parse(savedStateJSON);if(savedState.isCustom){tipCount.value='custom_tipCount';customCountContainer.classList.remove('hidden');customCountInput.value=savedState.count;generateTipInputs(savedState.count)}else{const optionExists=Array.from(tipCount.options).some(opt=>opt.value==savedState.count);if(optionExists){tipCount.value=savedState.count.toString();customCountContainer.classList.add('hidden');generateTipInputs()}else{tipCount.value='custom_tipCount';customCountContainer.classList.remove('hidden');customCountInput.value=savedState.count;generateTipInputs(savedState.count)}}
for(let i=0;i<savedState.inputs.length;i++){const index=i+1;const oddInput=document.getElementById(`tipOdd${index}`);const nameInput=document.getElementById(`tipName${index}`);const nameToggle=document.getElementById(`nameToggle${index}`);if(oddInput){oddInput.value=savedState.inputs[i].odd}
if(nameToggle&&savedState.inputs[i].name){nameToggle.textContent=savedState.inputs[i].name;nameToggle.dataset.customName=savedState.inputs[i].name;nameToggle.dataset.hasCustomName='true';if(nameInput)nameInput.value=savedState.inputs[i].name}else if(nameToggle){nameToggle.textContent=translations[currentLang]?translations[currentLang].nameButton:'Name';nameToggle.dataset.hasCustomName='false';delete nameToggle.dataset.customName}}
if(savedState.calculated){setTimeout(()=>{if(calculateButton)calculateButton.click();},100)}
sessionStorage.removeItem('FairOddsCalcState');return!0}catch(e){sessionStorage.removeItem('FairOddsCalcState');return!1}}
function updateLanguage(lang,skipInputGeneration=!1){currentLang=lang;document.documentElement.lang=lang;saveLanguagePreference(lang);if(document.body.classList.contains('dark-mode')){modeText.textContent=translations[lang].modeLight}else{modeText.textContent=translations[lang].modeDark}
document.getElementById('tipCountLabel').textContent=translations[lang].tipCountLabel;document.getElementById('customTipCountOption').textContent=translations[lang].customTipCount;customCountInput.placeholder=translations[lang].customTipCountPlaceholder;applyCustomCount.textContent=translations[lang].applyButton;calculateButton.textContent=translations[lang].calculateButton;document.getElementById('resultsTitle').textContent=translations[lang].resultsTitle;resetButton.textContent=translations[lang].resetButton;document.getElementById('disclaimer').innerHTML=translations[lang].disclaimer;if(!skipInputGeneration){generateTipInputs();if(lastTipData.length>0){for(let i=0;i<lastTipData.length;i++){const index=i+1;const oddInput=document.getElementById(`tipOdd${index}`);const nameInput=document.getElementById(`tipName${index}`);const nameToggle=document.getElementById(`nameToggle${index}`);if(oddInput){oddInput.value=lastTipData[i].odd}
const defaultNameSK=`Tip ${index}`;const defaultNameEN=`Bet ${index}`;const storedName=lastTipData[i].name;const isDefaultName=storedName===defaultNameSK||storedName===defaultNameEN;if(nameToggle&&!isDefaultName&&storedName){nameToggle.textContent=storedName;nameToggle.dataset.customName=storedName;nameToggle.dataset.hasCustomName='true';if(nameInput)nameInput.value=storedName}else if(nameToggle){nameToggle.textContent=translations[currentLang].nameButton;nameToggle.dataset.hasCustomName='false';delete nameToggle.dataset.customName}}}}
if(lastTipData.length>0&&lastFairOddsData&&!resultsCard.classList.contains('hidden')){redisplayResultsWithNewLanguage()}}
function generateTipInputs(customCount=null){let count;if(customCount!==null){count=customCount}else if(tipCount.value==='custom_tipCount'){const inputValue=parseInt(customCountInput.value);if(!isNaN(inputValue)&&inputValue>=2&&inputValue<=40){count=inputValue}else{count=2}}else{count=parseInt(tipCount.value)}
tipInputs.innerHTML='';for(let i=1;i<=count;i++){const tipGroup=document.createElement('div');tipGroup.className='form-group';const tipContainer=document.createElement('div');tipContainer.className='tip-container';const tipInput=document.createElement('input');tipInput.type='text';tipInput.id=`tipOdd${i}`;tipInput.placeholder=`${translations[currentLang]['tipPlaceholder']} ${i}`;tipInput.dataset.default=currentLang==='en'?`Bet ${i}`:`Tip ${i}`;tipInput.dataset.index=i;const nameToggle=document.createElement('button');nameToggle.className='name-toggle';nameToggle.textContent=translations[currentLang].nameButton;nameToggle.id=`nameToggle${i}`;nameToggle.dataset.index=i;tipContainer.appendChild(tipInput);tipContainer.appendChild(nameToggle);tipGroup.appendChild(tipContainer);const nameInput=document.createElement('input');nameInput.type='text';nameInput.id=`tipName${i}`;nameInput.className='name-input hidden';nameInput.placeholder=`${translations[currentLang]['namePlaceholder']} ${i}`;nameInput.dataset.index=i;nameInput.dataset.active='false';tipGroup.appendChild(nameInput);tipInputs.appendChild(tipGroup);nameToggle.addEventListener('click',function(){const index=this.dataset.index;const nameInputField=document.getElementById(`tipName${index}`);if(nameInputField.classList.contains('hidden')){nameInputField.classList.remove('hidden');nameInputField.focus()}else{nameInputField.classList.add('hidden')}});nameInput.addEventListener('blur',function(){const index=this.dataset.index;const nameToggleButton=document.getElementById(`nameToggle${index}`);const customName=this.value.trim();if(customName){nameToggleButton.textContent=customName;nameToggleButton.dataset.customName=customName;nameToggleButton.dataset.hasCustomName='true'}else{nameToggleButton.textContent=translations[currentLang].nameButton;nameToggleButton.dataset.hasCustomName='false';delete nameToggleButton.dataset.customName}
this.classList.add('hidden')});nameInput.addEventListener('keydown',function(event){if(event.key==='Enter'){event.preventDefault();this.blur()}})}}
function collectTipData(){let count;if(tipCount.value==='custom_tipCount'){count=parseInt(customCountInput.value);if(isNaN(count)||count<2||count>50){alert(translations[currentLang].invalidTipCount);customCountInput.focus();return[]}}else{count=parseInt(tipCount.value)}
const tipData=[];for(let i=1;i<=count;i++){const oddInput=document.getElementById(`tipOdd${i}`);const nameToggle=document.getElementById(`nameToggle${i}`);const oddValue=oddInput.value.trim().replace(',','.');const cisloRegex=/^\d+(\.\d+)?$/;if(!cisloRegex.test(oddValue)||!isFinite(oddValue)){alert(`${translations[currentLang]['invalidOdd']} ${i}!`);oddInput.focus();return[]}
const odd=parseFloat(oddValue);let name=nameToggle.dataset.customName||oddInput.dataset.default;tipData.push({name:name,odd:odd})}
return tipData}
function calculateFairOdds(tipData){const odds=tipData.map(tip=>tip.odd);const sumOfInverses=odds.reduce((sum,odd)=>sum+(1/odd),0);const fairProbs=odds.map(odd=>(1/odd)/sumOfInverses);const fairOdds=fairProbs.map(prob=>1/prob);return{fairOdds:fairOdds,fairProbs:fairProbs}}
function displayResults(tipData,fairOddsData){lastTipData=JSON.parse(JSON.stringify(tipData));lastFairOddsData=JSON.parse(JSON.stringify(fairOddsData));results.innerHTML='<h3>'+(currentLang==='sk'?'Výpočet férových kurzov a pravdepodobností':'Calculation of fair odds and probabilities')+'</h3>';for(let i=0;i<tipData.length;i++){const resultItem=document.createElement('div');resultItem.className='result-item';const resultTitle=document.createElement('div');resultTitle.className='result-title';resultTitle.textContent=tipData[i].name;const originalOdd=document.createElement('div');originalOdd.className='result-detail';originalOdd.innerHTML=`<span class="icon">📌</span> ${translations[currentLang]['resultOriginalOdd']} ${tipData[i].odd.toFixed(2)}`;const fairOdd=document.createElement('div');fairOdd.className='result-detail';fairOdd.innerHTML=`<span class="icon">🎯</span> ${translations[currentLang]['resultFairOdd']} ${fairOddsData.fairOdds[i].toFixed(2)}`;const probability=document.createElement('div');probability.className='result-detail';probability.innerHTML=`<span class="icon">📊</span> ${translations[currentLang]['resultProbability']} ${(fairOddsData.fairProbs[i] * 100).toFixed(2)} %`;const evaluation=document.createElement('div');evaluation.className='result-detail';if(fairOddsData.fairOdds[i]>tipData[i].odd){evaluation.innerHTML=`<span class="icon">⚠️</span>
								<span class="warning">${translations[currentLang]['resultUndervalued']}</span>
								<span class="info-icon ${currentLang}" data-tooltip="${translations[currentLang]['tooltipUndervalued']}">i</span>`}else{evaluation.innerHTML=`<span class="icon">✅</span>
								<span class="success">${translations[currentLang]['resultOvervalued']}</span>
								<span class="info-icon ${currentLang}" data-tooltip="${translations[currentLang]['tooltipOvervalued']}">i</span>`}
resultItem.appendChild(resultTitle);resultItem.appendChild(originalOdd);resultItem.appendChild(fairOdd);resultItem.appendChild(probability);resultItem.appendChild(evaluation);results.appendChild(resultItem)}
resultsCard.classList.remove('hidden')}
function redisplayResultsWithNewLanguage(){if(!lastTipData||!lastFairOddsData)return;results.innerHTML='<h3>'+(currentLang==='sk'?'Výpočet férových kurzov a pravdepodobností':'Calculation of fair odds and probabilities')+'</h3>';for(let i=0;i<lastTipData.length;i++){const resultItem=document.createElement('div');resultItem.className='result-item';const resultTitle=document.createElement('div');resultTitle.className='result-title';let displayName=lastTipData[i].name;if(displayName.startsWith('Tip ')&&currentLang==='en'){const tipNumber=displayName.split(' ')[1];displayName=`Bet ${tipNumber}`}else if(displayName.startsWith('Bet ')&&currentLang==='sk'){const betNumber=displayName.split(' ')[1];displayName=`Tip ${betNumber}`}
resultTitle.textContent=displayName;const originalOdd=document.createElement('div');originalOdd.className='result-detail';originalOdd.innerHTML=`<span class="icon">📌</span> ${translations[currentLang]['resultOriginalOdd']} ${lastTipData[i].odd.toFixed(2)}`;const fairOdd=document.createElement('div');fairOdd.className='result-detail';fairOdd.innerHTML=`<span class="icon">🎯</span> ${translations[currentLang]['resultFairOdd']} ${lastFairOddsData.fairOdds[i].toFixed(2)}`;const probability=document.createElement('div');probability.className='result-detail';probability.innerHTML=`<span class="icon">📊</span> ${translations[currentLang]['resultProbability']} ${(lastFairOddsData.fairProbs[i] * 100).toFixed(2)} %`;const evaluation=document.createElement('div');evaluation.className='result-detail';if(lastFairOddsData.fairOdds[i]>lastTipData[i].odd){evaluation.innerHTML=`<span class="icon">⚠️</span>
								<span class="warning">${translations[currentLang]['resultUndervalued']}</span>
								<span class="info-icon" data-tooltip="${translations[currentLang]['tooltipUndervalued']}">i</span>`}else{evaluation.innerHTML=`<span class="icon">✅</span>
								<span class="success">${translations[currentLang]['resultOvervalued']}</span>
								<span class="info-icon" data-tooltip="${translations[currentLang]['tooltipOvervalued']}">i</span>`}
resultItem.appendChild(resultTitle);resultItem.appendChild(originalOdd);resultItem.appendChild(fairOdd);resultItem.appendChild(probability);resultItem.appendChild(evaluation);results.appendChild(resultItem)}}
function updateUrlParam(param,value){const url=new URL(window.location.href);url.searchParams.set(param,value);window.history.replaceState({},'',url)}
function applyCustomTipCount(){const customCount=parseInt(customCountInput.value);if(isNaN(customCount)||customCount<2||customCount>50){alert(translations[currentLang].invalidTipCount);customCountInput.focus();return}
updateUrlParam('count',customCount);generateTipInputs(customCount)}
const stateLoaded=loadAndApplyStateAfterRefresh();if(!stateLoaded){generateTipInputs()}
document.body.classList.add('dark-mode');modeIcon.textContent='☀️';modeToggle.addEventListener('click',function(){document.body.classList.toggle('dark-mode');if(document.body.classList.contains('dark-mode')){modeIcon.textContent='☀️';modeText.textContent=translations[currentLang].modeLight}else{modeIcon.textContent='🌙';modeText.textContent=translations[currentLang].modeDark}});tipCount.addEventListener('change',function(){if(this.value==='custom_tipCount'){customCountContainer.classList.remove('hidden');customCountInput.focus()}else{customCountContainer.classList.add('hidden');generateTipInputs();updateUrlParam('count',this.value)}});applyCustomCount.addEventListener('click',function(){applyCustomTipCount()});customCountInput.addEventListener('keydown',function(event){if(event.key==='Enter'){applyCustomTipCount()}});calculateButton.addEventListener('click',function(){const tipData=collectTipData();if(tipData.length>0){const fairOddsData=calculateFairOdds(tipData);displayResults(tipData,fairOddsData)}});langSelect.addEventListener('change',function(){const newLang=this.value;const resultsWereVisible=!resultsCard.classList.contains('hidden');if(isMobileDevice()&&resultsWereVisible){saveCurrentStateBeforeRefresh();saveLanguagePreference(newLang);window.location.reload()}else{updateLanguage(newLang)}});resetButton.addEventListener('click',function(){sessionStorage.removeItem('FairOddsCalcState');tipInputs.innerHTML='';results.innerHTML='';resultsCard.classList.add('hidden');lastTipData=[];lastFairOddsData=null;tipCount.value='2';customCountContainer.classList.add('hidden');customCountInput.value='';window.history.replaceState({},'',window.location.pathname);generateTipInputs()});updateLanguage(currentLang,stateLoaded)})